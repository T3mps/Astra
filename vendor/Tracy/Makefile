# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Itracy/public
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug-linux-x86_64/Tracy
TARGET = $(TARGETDIR)/libTracy.a
OBJDIR = bin-int/Debug-linux-x86_64/Tracy
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DNOMINMAX -DSPDLOG_USE_STD_FORMAT -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -DTRACY_ENABLE -DTRACY_ON_DEMAND -DTRACY_CALLSTACK=10
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),debug-as)
TARGETDIR = bin/Debug-AS-linux-x86_64/Tracy
TARGET = $(TARGETDIR)/libTracy.a
OBJDIR = bin-int/Debug-AS-linux-x86_64/Tracy
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DNOMINMAX -DSPDLOG_USE_STD_FORMAT -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -DTRACY_ENABLE -DTRACY_ON_DEMAND -DTRACY_CALLSTACK=10
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = bin/Release-linux-x86_64/Tracy
TARGET = $(TARGETDIR)/libTracy.a
OBJDIR = bin-int/Release-linux-x86_64/Tracy
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DNOMINMAX -DSPDLOG_USE_STD_FORMAT -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -DTRACY_CALLSTACK=10 -DTRACY_ENABLE -DTRACY_ON_DEMAND
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = bin/Dist-linux-x86_64/Tracy
TARGET = $(TARGETDIR)/libTracy.a
OBJDIR = bin-int/Dist-linux-x86_64/Tracy
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DNOMINMAX -DSPDLOG_USE_STD_FORMAT -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -DTRACY_CALLSTACK=10 -DTRACY_ENABLE -DTRACY_ON_DEMAND
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/TracyAlloc.o
GENERATED += $(OBJDIR)/TracyCallstack.o
GENERATED += $(OBJDIR)/TracyDxt1.o
GENERATED += $(OBJDIR)/TracyOverride.o
GENERATED += $(OBJDIR)/TracyProfiler.o
GENERATED += $(OBJDIR)/TracySocket.o
GENERATED += $(OBJDIR)/TracyStackFrames.o
GENERATED += $(OBJDIR)/TracySysTime.o
GENERATED += $(OBJDIR)/TracySysTrace.o
GENERATED += $(OBJDIR)/TracySystem.o
GENERATED += $(OBJDIR)/alloc.o
GENERATED += $(OBJDIR)/dwarf.o
GENERATED += $(OBJDIR)/elf.o
GENERATED += $(OBJDIR)/fileline.o
GENERATED += $(OBJDIR)/macho.o
GENERATED += $(OBJDIR)/mmapio.o
GENERATED += $(OBJDIR)/posix.o
GENERATED += $(OBJDIR)/sort.o
GENERATED += $(OBJDIR)/state.o
GENERATED += $(OBJDIR)/tracy_lz4.o
GENERATED += $(OBJDIR)/tracy_lz4hc.o
GENERATED += $(OBJDIR)/tracy_rpmalloc.o
OBJECTS += $(OBJDIR)/TracyAlloc.o
OBJECTS += $(OBJDIR)/TracyCallstack.o
OBJECTS += $(OBJDIR)/TracyDxt1.o
OBJECTS += $(OBJDIR)/TracyOverride.o
OBJECTS += $(OBJDIR)/TracyProfiler.o
OBJECTS += $(OBJDIR)/TracySocket.o
OBJECTS += $(OBJDIR)/TracyStackFrames.o
OBJECTS += $(OBJDIR)/TracySysTime.o
OBJECTS += $(OBJDIR)/TracySysTrace.o
OBJECTS += $(OBJDIR)/TracySystem.o
OBJECTS += $(OBJDIR)/alloc.o
OBJECTS += $(OBJDIR)/dwarf.o
OBJECTS += $(OBJDIR)/elf.o
OBJECTS += $(OBJDIR)/fileline.o
OBJECTS += $(OBJDIR)/macho.o
OBJECTS += $(OBJDIR)/mmapio.o
OBJECTS += $(OBJDIR)/posix.o
OBJECTS += $(OBJDIR)/sort.o
OBJECTS += $(OBJDIR)/state.o
OBJECTS += $(OBJDIR)/tracy_lz4.o
OBJECTS += $(OBJDIR)/tracy_lz4hc.o
OBJECTS += $(OBJDIR)/tracy_rpmalloc.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Tracy
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Tracy
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/TracyAlloc.o: tracy/public/client/TracyAlloc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracyCallstack.o: tracy/public/client/TracyCallstack.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracyDxt1.o: tracy/public/client/TracyDxt1.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracyOverride.o: tracy/public/client/TracyOverride.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracyProfiler.o: tracy/public/client/TracyProfiler.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracySysTime.o: tracy/public/client/TracySysTime.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracySysTrace.o: tracy/public/client/TracySysTrace.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tracy_rpmalloc.o: tracy/public/client/tracy_rpmalloc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracySocket.o: tracy/public/common/TracySocket.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracyStackFrames.o: tracy/public/common/TracyStackFrames.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TracySystem.o: tracy/public/common/TracySystem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tracy_lz4.o: tracy/public/common/tracy_lz4.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tracy_lz4hc.o: tracy/public/common/tracy_lz4hc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alloc.o: tracy/public/libbacktrace/alloc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dwarf.o: tracy/public/libbacktrace/dwarf.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/elf.o: tracy/public/libbacktrace/elf.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fileline.o: tracy/public/libbacktrace/fileline.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/macho.o: tracy/public/libbacktrace/macho.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mmapio.o: tracy/public/libbacktrace/mmapio.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/posix.o: tracy/public/libbacktrace/posix.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sort.o: tracy/public/libbacktrace/sort.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/state.o: tracy/public/libbacktrace/state.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif